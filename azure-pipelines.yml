# Azure DevOps Pipeline for Python FastAPI App on Linux Web App

trigger:
- test-fast-apis-cicd

variables:
  azureServiceConnectionId: '95d44873-ac60-4d03-8b0e-67ac5001d4dd'
  webAppName: 'test-viziapps-fast-apis'
  vmImageName: 'ubuntu-latest'
  projectRoot: $(System.DefaultWorkingDirectory)
  pythonVersion: '3.10'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'

    - script: |
        curl -sSL https://install.python-poetry.org | python3 -
        export PATH="$HOME/.local/bin:$PATH"
        poetry install --no-root
        poetry add azure-storage-blob python-multipart anthropic jinja2
      workingDirectory: $(projectRoot)
      displayName: "Install dependencies using Poetry"

    - task: ArchiveFiles@2
      displayName: 'Archive application files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Publish artifact'
      artifact: drop

- stage: Deploy
  displayName: 'Deploy to Azure Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    pool:
      vmImage: $(vmImageName)  # Removed environment reference
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy to Azure App Service'
            inputs:
              azureSubscription: $(azureServiceConnectionId)
              appName: $(webAppName)
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
              startupCommand: 'poetry run uvicorn main:app --host 0.0.0.0 --port 8000'
